# This is a basic workflow to help you get started with Actions

name: CI

env:
  IMAGENAME1: ${{ secrets.DOCKERHUB_USERNAME }}/avlservice-repo:avlserviceimage1
  IMAGENAME2: ${{ secrets.DOCKERHUB_USERNAME }}/avlservice-repo:avlserviceimage2

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    tags:
      - v*.*

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: 'Checkout'
        uses: actions/checkout@v2

      #- name: DockerHub Login
      #  uses: docker/login-action@v1
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Runs a set of commands using the runners shell
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
        
      - name: Build Docker images
        id: docker_build
        run: |
         docker build -t ${{ env.IMAGENAME1 }}${{steps.get_version.outputs.VERSION}} ./service1
         docker build -t ${{ env.IMAGENAME2 }}${{steps.get_version.outputs.VERSION}} ./service2

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 'Unit test'
        run: echo "Unit test passed"
      - name: 'Integration test'
        run: echo "Integration test passed"
  
  push:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - name: 'Login to Docker Hub'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: 'Push to DockerHub'
        run: |
          docker push ${{ env.IMAGENAME1 }}${{ steps.get_version.outputs.VERSION }}
          docker push ${{ env.IMAGENAME2 }}${{ steps.get_version.outputs.VERSION }}
          
          
